
import gdb

HAS_PWNDBG=False #TODO: Detect dynamically

INF = gdb.inferiors()[0]

gdb.execute('add-symbol-file /usr/local/libexec/sudo/libsudo_util.so.0')
gdb.execute('add-symbol-file /usr/local/libexec/sudo/sudoers.so')

# GDB events:
# https://sourceware.org/gdb/current/onlinedocs/gdb.html/Events-In-Python.html
def exit_handler(event: gdb.ExitedEvent):
    # called when the inferior exits
    if hasattr(event, 'exit_code'):
        print(f"Inferior exited. exit code: {event.exit_code}")
    else:
        print("Inferior exited. exit code: unavailable")
    gdb.execute('quit')
gdb.events.exited.connect(exit_handler)

def stop_handler(event: gdb.StopEvent):
    print("Inferior stopped: " + str(type(event)))

    if HAS_PWNDBG:
        gdb.execute('set context-output stdout')
    output  = ''
    output += 'Stop Reason:\n'
    if isinstance(event, gdb.SignalEvent):
        output += event.stop_signal + '\n'
    else:
        output += str(type(event)) + '\n'
    output += 'context:\n'
    if HAS_PWNDBG:
        output += gdb.execute('context', to_string=True)
    output += 'environment:\n'
    output += gdb.execute('show environment', to_string=True)
    output += 'bt:\n'
    output += gdb.execute('bt', to_string=True)
    
    print(output)
    gdb.execute('kill')
gdb.events.stop.connect(stop_handler)

gdb.execute("r")
